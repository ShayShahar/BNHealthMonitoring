NDContentPage.OnToolTipsLoaded({2:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private</span> MessageDispatcher()</div><div class=\"TTSummary\">Prevents a default instance of the MessageDispatcher class from being created.</div></div>",733:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype733\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">Monitor.&#8203;ViewApp.&#8203;BL.</span>&#8203;MessageDispatcher</div></div></div><div class=\"TTSummary\">MessageDispatcher class manage and handle the TCP/IP communication.&nbsp; In order to get an instance of MessageDispatcher you should call the &quot;GetInstance&quot; method.&nbsp; Note that this class implements the singleton pattern, which restricts the instantiation of the class to one object.&nbsp; The class implements the IDisposable interface which means that the Dispose method must be called before exiting the application in order to gracefully close the sockets.</div></div>",735:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype735\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">Monitor.&#8203;ViewApp.&#8203;BL.</span>&#8203;DataState</div></div></div><div class=\"TTSummary\">DataState class stores all the logic &amp; user data.&nbsp; In order to get an instance of DataState you should call the &quot;GetInstance&quot; method.&nbsp; Note that this class implements the singleton pattern, which restricts the instantiation of the class to one object.</div></div>"});