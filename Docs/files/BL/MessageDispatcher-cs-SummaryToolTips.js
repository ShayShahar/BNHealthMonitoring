NDSummary.OnToolTipsLoaded("File:BL/MessageDispatcher.cs",{733:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype733\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">Monitor.&#8203;ViewApp.&#8203;BL.</span>&#8203;MessageDispatcher</div></div></div><div class=\"TTSummary\">MessageDispatcher class manage and handle the TCP/IP communication.&nbsp; In order to get an instance of MessageDispatcher you should call the &quot;GetInstance&quot; method.&nbsp; Note that this class implements the singleton pattern, which restricts the instantiation of the class to one object.&nbsp; The class implements the IDisposable interface which means that the Dispose method must be called before exiting the application in order to gracefully close the sockets.</div></div>",763:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype763\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static</span> MessageDispatcher s_messageDispatcher</div></div>",764:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype764\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private readonly</span> NetMQContext m_context</div></div>",765:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype765\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private readonly</span> DataState m_dataState</div></div>",766:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype766\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private readonly</span> Poller m_poller</div></div>",767:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype767\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private readonly</span> SubscriberSocket m_socket</div></div>",2:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private</span> MessageDispatcher()</div><div class=\"TTSummary\">Prevents a default instance of the MessageDispatcher class from being created.</div></div>",729:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype729\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public static</span> MessageDispatcher GetInsatnce()</div><div class=\"TTSummary\">Gets the insatnce.</div></div>",730:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype730\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> Close()</div><div class=\"TTSummary\">Closes the TCP sockets</div></div>",731:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype731\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> Dispose()</div><div class=\"TTSummary\">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</div></div>",732:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype732\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private void</span> connect()</div><div class=\"TTSummary\">Create the TCP connections to the health monitoring module.</div></div>",734:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype734\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private void</span> onMessageReceived(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">object</span>&nbsp;</td><td class=\"PName last\">p_sender,</td></tr><tr><td class=\"PType first\">NetMQSocketEventArgs&nbsp;</td><td class=\"PName last\">p_e</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Message received event.&nbsp; This function classifies the received message according to the message\'s opcode then pass it to the DataState.</div></div>"});